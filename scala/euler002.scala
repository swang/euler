/*
################################################################################
# Euler #2
################################################################################
#
# Each new term in the Fibonacci sequence is generated by adding the previous 
# two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do not exceed
# four million, find the sum of the even-valued terms.
#
################################################################################
#
# 4613732
#
*/

import Stream._

println( 
  // generator for fibonacci tuples
  iterate((1,1)) { case (a,b) => { var c = b; (b, a + b) } }  
  takeWhile { case(a,b) => b <= 4000000 } // keep going until < 4,000,000
  map { case(a,b) => b } // convert from tuple to list
  filter { n => n % 2 == 0 }  // drop non-even numbers
  sum
)